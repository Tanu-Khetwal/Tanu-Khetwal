import openai 
import assemblyai as aai
import elevenlabs
from queue import Queue

#making API keys of each libraries
aai.settings.api_key = "API-KEY"
openai.api_key = "API-KEY"
elevenlabs.set_api_key("API-KEY")

transcript_queue = Queue()

def on_data(transcript: aai.RealtimeTranscript):
    if not transcript.text:
        return
    if isinstance(transcript, aai.RealtimeFinalTranscript):
        transcript_queue.put(transcript.text + '')
        print("User : ", transcript.text, end = "\r\n")
    else:
        print(transcript.text, end = "\r")
def on_error(error: aai.RealtimeError):
    print("An error occurred: ", error)

#Conversation 
def handle_conversation():
    while True:
        transcriber = aai.RealtimeTranscriber(
            on_data = on_data,
            on_error = on_error,
            sample_rate = 44_100,
            )
        transcriber.connect()
        microphone_stream = aai.extras.MicrophoneStream()
        transcriber.stream(microphone_stream)
        
        transcriber.close()
        transcript_result = transcript_queue.get()
        
        response = openai.ChatCompletion.create(
            model = 'gpt-4',
            messages = [
                {"role": "system", "content": 'You are a highly skilled AI, answer the question given within a maximum of 10000 characters.'}, 
                {"role": "user", "content": transcript_result}
                ]
            )
        text = response['choices'][0]['message']['content']
        #converting response into audio
        audio = elevenlabs.generate(
            text = text,
            voice = 'Bella'
            )
        print("\nAI : ", text, end = "\r\n")
        elevenlabs.play(audio)
handle_conversation()
